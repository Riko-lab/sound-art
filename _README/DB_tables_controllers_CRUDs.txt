
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %
%            ELENCO TABLE + MODEL + RELAZIONI + ipotesi CRUD         %
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %

TABLE			MODEL / MIGRATIONS

				User 
users			create_users_tabe
				/////////////////////////////////////////////////////////////////////////////////////
				profile() 	{ return $this->hasOne('App\Profile'); }

				categories(){ return $this->belongsToMany('App\Category'); }
				genres() 	{ return $this->belongsToMany('App\Genre'); }
				offers() 	{ return $this->belongsToMany('App\Offer'); }

				contracts() { return $this->hasMany('App\Contract'); }
				reviews()	{ return $this->hasMany('App\Review') }
				messages()	{ return $this->hasMany('App\Message') }
				/////////////////////////////////////////////////////////////////////////////////////
				CRUD:
					YES > utente registrato: dettaglio SE STESSO, delete SOLO SE STESSO (eventualmente)
					Controllers/Admin/UserController

				Profile
profiles		create_profiles_table
				fk: user_id (***)
				/////////////////////////////////////////////////////////////////////////////////////
				user()	 	{ return $this->belongsTo('App\User'); }
				/////////////////////////////////////////////////////////////////////////////////////
				CRUD: 
					YES > utente registrato: elenco, dettaglio, crea, modifica, delete
					Controllers/Admin/ProfileController

				Category
categories		create_categories_table
user_category	create_user_category_table
				/////////////////////////////////////////////////////////////////////////////////////
				users()		{ return $this->belongsToMany('App\User'); }
				/////////////////////////////////////////////////////////////////////////////////////
				CRUD: NO > utente registrato non tocca (accesso solo sviluppatori)

				Genre
genres			create_genres_table
user_genre		create_user_genre_table
				/////////////////////////////////////////////////////////////////////////////////////
				users()	{ return $this->belongsToMany('App\User'); }
				/////////////////////////////////////////////////////////////////////////////////////
				CRUD: NO > utente registrato non tocca (accesso solo sviluppatori)

				Offer
offers			create_offers_table
user_offer		create_user_offer_table
				/////////////////////////////////////////////////////////////////////////////////////
				users()	{ return $this->belongsToMany('App\User'); }
				/////////////////////////////////////////////////////////////////////////////////////
				CRUD: NO > utente registrato non tocca (accesso solo sviluppatori)

				Contract
contracts		create_contracts_table
				/////////////////////////////////////////////////////////////////////////////////////
				user()			{ return $this->belongsTo('App\User'); }
				sponsorship()	{ return $this->belongsTo('App\Sponsorship'); }
				/////////////////////////////////////////////////////////////////////////////////////
				CRUD: 
					YES solo create/store per admin
					Controllers/Admin/ContractController

				Sponsorship
sponsorships	create_sponsorships_table
				/////////////////////////////////////////////////////////////////////////////////////
				contracts()	{ return $this->hasMany('App\Contract'); }
				/////////////////////////////////////////////////////////////////////////////////////
				CRUD: YES solo index mostra elenco prodotti (no show)
					Controllers/Admin/SponsorshipController

				Review
reviews			create_reviews_table
				/////////////////////////////////////////////////////////////////////////////////////
				user() { return $this->belongsTo('App\User'); }
				/////////////////////////////////////////////////////////////////////////////////////
				CRUD: 
					YES solo create/store per guest e admin
					Controllers/ReviewController@create

				Message
messages		create_messages_table
				/////////////////////////////////////////////////////////////////////////////////////
				user() { return $this->belongsTo('App\User'); }
				/////////////////////////////////////////////////////////////////////////////////////
				CRUD:
					YES solo create/store per guest e admin
					Controllers/MessageController@create


relazioni, vedi:
https://laravel.com/docs/8.x/eloquent-relationships#one-to-one

(***) 
relazione 1-1 users-profiles, separiamo id profile da user_id 
-------------------------------------------------------------------
	Schema::create('profiles', function (Blueprint $table) {

		$table->id();
		$table->foreign('user_id')->references('id')->on('users');

	});
------------------------------------------------------------------


% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %
%                ELENCO VIEW con contenuti e funzioni                %
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %

# GUEST or ADMIN HOME                    
# /views/home.blade.php                  

	home per tutti
	simple search
	vista sponsorships
	altro?

# ADMIN DASHBOARD                        
# /views/admin/dashboard.blade.ph        

	pulsante: 
		vedi/modifica tuo profilo > [ProfileController@show]
		crea profilo > [Admin/ProfileController@create]
	pulsante:
		fai la sponsorship > [sponsorship.blade.php]
	vedi i messaggi > [MessageController@index]
	vedi i review > [ReviewController@index]
	statistiche		
	altre funzioni quali?

# ADMIN SPONSORSHIP                      
# /views/admin/sponsorship.blade.php     

	SponsorshipController@index > tendina > scelgo
	pulsante submit	(tendina scelta) 
	API
		????
	>>> DB contracts
		 user_id,
		 sponsoship_id,
		 data now,
		 data end, 
		 successo transazione 
		 scelta, 

# GUEST or ADMIN ADVANCED SEARCH PRFILE  
# /views/guest/profiles/search.blade.php 
# /views/guest/profiles/index.blade.php  

	equivale a index.blade.php

# GUEST or ADMIN SHOW PROFILE            
# /views/guest/profiles/show.blade.php   

	vedo tutti i dettagli con CV, solo vista

	____
	{ GUEST OR ADMIN } AND { ID != SE STESSO }
		pulsante:
			manda un messaggio > [MessageController@create]
			>>> VORREMMO NON APRIRE UN'ALTRA VIEW <<<
		pulsante:
			fai una recensione > [ReviewController@create]
			>>> VORREMMO NON APRIRE UN'ALTRA VIEW <<<
	_____
	{ SOLO ADMIN } AND { ID = STESSO }
		pulsante:
			modifica tuo profilo > [Admin/ProfileController@edit]
	


% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %
%       ELENCO MODEL + GUEST/ADMIN CONTROLLER + CRUD moethods        %
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %

				GUEST			 		ADMIN

User			N.A. 					N.A.

Profile			ProfileController 		Admin/ProfileController
				index 					(index)
				show					(show)
										create
										edit
										delete

Message 		MessageController		Admin/MessageController
				create					index
										show
										create

Review			ReviewController 		Admin/ReviewController
				create					index
										show
										create

Category

Genre

Offer

Sponsorship

Contract

! DELLE TABELLE PONTE NON CI SONO MODEL/CONTROLLER, MA CI SONO MIGRATION !



% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %
%   CREAZIONE MODEL + MIGRATION + SEEDER + GUEST/ADMIN CONTROLLER    %
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %

1. Profile 

php artisan make:model Profile -rcms
*Profile
*create_profiles_table
*ProfileSeeder
*ProfileController
php artisan make:controller Admin/ProfileController
*/Admin/ProfileController

2. Message 

php artisan make:model Message -rcms
*Message
*create_messages_table
*MessageSeeder
*MessageController
php artisan make:controller Admin/MessageController
*/Admin/MessageController

2. Review

php artisan make:model Review -rcms
*Review
*create_reviews_table
*ReviewSeeder
*ReviewController
php artisan make:controller Admin/ReviewController
*/Admin/ReviewController

-----

3. Category

4. Genre

5. Offer

6. migration user_category_table

7. migration user_genre_table

8. migration user_offer_table

-----

9. Sponsorship

10. Contract






<img style="max-width:600px;" src="{{asset('storage/'.$post->image)}}" alt="">